pipeline {
    agent any
    
    environment {
        APP_PORT = 8000  // Port on which FastAPI will run
        VM_IP = '34.134.188.249'  // Replace with your VM's IP address
        SONARQUBE_URL = "http://${VM_IP}:9000"  // Replace with your SonarQube server URL
        SONAR_AUTH_TOKEN = "cd298146cecdbf794787f0b9fd13e949546b4784"
        SONAR_PROJECT_KEY = "blah"  // Replace with your SonarQube project key
        DOCKER_IMAGE = "cetyl/jenkins_fastapi-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
    }
    
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Cetyl/FastAPI-jenkins.git'
            }
        }
        
        stage('Install dependencies') {
            steps {
                sh "sudo apt update"
                sh "sudo apt install python3-pip -y"
                sh "sudo pip install fastapi uvicorn"
            }
        }
        
        stage('Deploy') {
            steps {
                script {
                    def deployCmd = "uvicorn main:app --host 0.0.0.0 --port ${APP_PORT} --reload > /dev/null 2>&1 &"
                    sh deployCmd
                    sleep 20
                    def curlCmd = "curl http://${VM_IP}:${APP_PORT}/"
                    sh curlCmd
                }
            }
        }
        
        stage('SonarQube analysis') {
            steps {
                // Securely retrieve SonarQube token from Jenkins credentials
                withCredentials([string(credentialsId: 'SonarQube', variable: 'SONAR_AUTH_TOKEN')]) {
                    // Run SonarQube scanner with credentials
                    sh """
                        sonar-scanner \
                          -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
                          -Dsonar.host.url=${SONARQUBE_URL} \
                          -Dsonar.login=${SONAR_AUTH_TOKEN}
                    """
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    sh 'docker build -t ${DOCKER_IMAGE} .'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "FastAPI-jenkins"
                GIT_USER_NAME = "Cetyl"
            }
            steps {
                withCredentials([string(credentialsId: 'git', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "rohan.cetyl@gmail.com"
                        git config user.name "Cetyl"
                        BUILD_NUMBER=${BUILD_NUMBER}
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" manifests/deployment.yaml
                        git add manifests/deployment.yaml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    }
    
    post {
        always {
            sh "killall uvicorn"
        }
    }
}
